##                          ##
##         BlueMap          ##
##      Storage-Config      ##
##                          ##

# The storage-type of this storage.
# Depending on this setting, different config-entries are allowed/expected in this config file.
# Don't change this value! (If you want a different storage-type, check out the other example-configs)
storage-type: SQL

# The JDBC-Connection URL that is used to connect to the database.
# The format for this url is usually something like: jdbc:[driver]://[host]:[port]/[database]
# The exact format of the url is determined by the JDBC-Driver you are using.
connection-url: "jdbc:mysql://localhost:3306/bluemap?permitMysqlScheme"

# You can set any additional (JDBC-Driver-specific) properties here
# Usually that's your db-user and password
connection-properties: {
    user: "root",
    password: ""
}

# The maximum number of connections to the database that are allowed to be open at the same time.
# A negative number means unlimited.
# Default is: -1
max-connections: -1

# This can be used to load a custom jdbc-driver from a .jar file.
# E.g. if your runtime-environment is not already providing the sql-driver you need,
# you could download the MariaDB JDBC-Connector from https://mariadb.com/downloads/connectors/connectors-data-access/java8-connector/
# place it in the './bluemap' folder and use is like this:
#driver-jar: "bluemap/mariadb-java-client-3.0.7.jar"

# This is the driver-class that bluemap will try to load and use.
# Check the documentation of the driver you are using if you don't know this.
# Leaving this commented means that bluemap automatically tries to find a suitable driver in your classpath.
# (If you added a custom driverJar above, you HAVE TO set the correct class name here)
#driver-class: "org.mariadb.jdbc.Driver"

# The compression-type that bluemap will use to compress generated map-data.
# Available compression-types are:
#  - GZIP
#  - NONE
# The default is: GZIP
compression: GZIP
